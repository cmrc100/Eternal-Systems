//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class apiBankBranchX {
	public static void consumeObject(JSONParser parser) {
		Integer depth = 0;
		do {
			JSONToken curr = parser.getCurrentToken();
			if (curr == JSONToken.START_OBJECT || 
				curr == JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == JSONToken.END_OBJECT ||
				curr == JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}

	public class Brand {
		public String TrademarkIPOCode {get;set;} 
		public String TrademarkID {get;set;} 

		public Brand(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'TrademarkIPOCode') {
							TrademarkIPOCode = parser.getText();
						} else if (text == 'TrademarkID') {
							TrademarkID = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Brand consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class OpeningTimes {
		public String OpeningDay {get;set;} 
		public String OpeningTime {get;set;} 
		public String ClosingTime {get;set;} 

		public OpeningTimes(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'OpeningDay') {
							OpeningDay = parser.getText();
						} else if (text == 'OpeningTime') {
							OpeningTime = parser.getText();
						} else if (text == 'ClosingTime') {
							ClosingTime = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'OpeningTimes consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Meta {
		public String LastUpdated {get;set;} 
		public Integer TotalResults {get;set;} 
		public String Agreement {get;set;} 
		public String License {get;set;} 
		public String TermsOfUse {get;set;} 

		public Meta(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'LastUpdated') {
							LastUpdated = parser.getText();
						} else if (text == 'TotalResults') {
							TotalResults = parser.getIntegerValue();
						} else if (text == 'Agreement') {
							Agreement = parser.getText();
						} else if (text == 'License') {
							License = parser.getText();
						} else if (text == 'TermsOfUse') {
							TermsOfUse = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Meta consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Organisation {
		public ParentOrganisation ParentOrganisation {get;set;} 
		public Brand Brand {get;set;} 

		public Organisation(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'ParentOrganisation') {
							ParentOrganisation = new ParentOrganisation(parser);
						} else if (text == 'Brand') {
							Brand = new Brand(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Organisation consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Address {
		public String StreetName {get;set;} 
		public String BuildingNumberOrName {get;set;} 
		public String PostCode {get;set;} 
		public String TownName {get;set;} 
		public String CountrySubDivision {get;set;} 
		public String Country {get;set;} 

		public Address(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'StreetName') {
							StreetName = parser.getText();
						} else if (text == 'BuildingNumberOrName') {
							BuildingNumberOrName = parser.getText();
						} else if (text == 'PostCode') {
							PostCode = parser.getText();
						} else if (text == 'TownName') {
							TownName = parser.getText();
						} else if (text == 'CountrySubDivision') {
							CountrySubDivision = parser.getText();
						} else if (text == 'Country') {
							Country = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Address consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class ParentOrganisation {
		public String BIC {get;set;} 
		public OrganisationName OrganisationName {get;set;} 

		public ParentOrganisation(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'BIC') {
							BIC = parser.getText();
						} else if (text == 'OrganisationName') {
							OrganisationName = new OrganisationName(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'ParentOrganisation consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class GeographicLocation {
		public String Latitude {get;set;} 
		public String Longitude {get;set;} 

		public GeographicLocation(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'Latitude') {
							Latitude = parser.getText();
						} else if (text == 'Longitude') {
							Longitude = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'GeographicLocation consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class OrganisationName {
		public String LegalName {get;set;} 

		public OrganisationName(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'LegalName') {
							LegalName = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'OrganisationName consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Data {
		public Organisation Organisation {get;set;} 
		public String BranchName {get;set;} 
		public String BranchIdentification {get;set;} 
		public String BranchType {get;set;} 
		public Address Address {get;set;} 
		public String BranchPhoto {get;set;} 
		public String TelephoneNumber {get;set;} 
		public GeographicLocation GeographicLocation {get;set;} 
		public List<OpeningTimes> OpeningTimes {get;set;} 
		public String AccessibilityTypes {get;set;} 
		public List<String> BranchSelfServeServiceName {get;set;} 
		public List<String> CustomerSegment {get;set;} 
		public Boolean ATMAtBranch {get;set;} 
		public List<String> BranchMediatedServiceName {get;set;} 

		public Data(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'Organisation') {
							Organisation = new Organisation(parser);
						} else if (text == 'BranchName') {
							BranchName = parser.getText();
						} else if (text == 'BranchIdentification') {
							BranchIdentification = parser.getText();
						} else if (text == 'BranchType') {
							BranchType = parser.getText();
						} else if (text == 'Address') {
							Address = new Address(parser);
						} else if (text == 'BranchPhoto') {
							BranchPhoto = parser.getText();
						} else if (text == 'TelephoneNumber') {
							TelephoneNumber = parser.getText();
						} else if (text == 'GeographicLocation') {
							GeographicLocation = new GeographicLocation(parser);
						} else if (text == 'OpeningTimes') {
							OpeningTimes = new List<OpeningTimes>();
							while (parser.nextToken() != JSONToken.END_ARRAY) {
								OpeningTimes.add(new OpeningTimes(parser));
							}
						} else if (text == 'AccessibilityTypes') {
							AccessibilityTypes = parser.getText();
						} else if (text == 'BranchSelfServeServiceName') {
							BranchSelfServeServiceName = new List<String>();
							while (parser.nextToken() != JSONToken.END_ARRAY) {
								BranchSelfServeServiceName.add(parser.getText());
							}
						} else if (text == 'CustomerSegment') {
							CustomerSegment = new List<String>();
							while (parser.nextToken() != JSONToken.END_ARRAY) {
								CustomerSegment.add(parser.getText());
							}
						} else if (text == 'ATMAtBranch') {
							ATMAtBranch = parser.getBooleanValue();
						} else if (text == 'BranchMediatedServiceName') {
							BranchMediatedServiceName = new List<String>();
							while (parser.nextToken() != JSONToken.END_ARRAY) {
								BranchMediatedServiceName.add(parser.getText());
							}
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class apiBankBranch {
		public Meta meta {get;set;} 
		public List<Data> data {get;set;} 

		public ApiBankBranch(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'meta') {
							meta = new Meta(parser);
						} else if (text == 'data') {
							data = new List<Data>();
							while (parser.nextToken() != JSONToken.END_ARRAY) {
								data.add(new Data(parser));
							}
						} else {
							System.debug(LoggingLevel.WARN, 'ApiBankBranch consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static apiBankBranchX.apiBankBranch parse(String json) {
		system.debug(' @@@@@@ json ' + json);
		return new apiBankBranchX.apiBankBranch(System.JSON.createParser(json));
	}
}